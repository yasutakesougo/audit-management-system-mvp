name: Report Links
on:
  workflow_dispatch:
  push:
  pull_request:
env:
  COVERAGE_URL: ${{ vars.COVERAGE_URL }}
  LIGHTHOUSE_URL: ${{ vars.LIGHTHOUSE_URL }}
  SENTRY_URL: ${{ vars.SENTRY_URL }}
jobs:
  links:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Normalize variables
        id: norm
        shell: bash
        run: |
          cov="${COVERAGE_URL:-}"
          lh="${LIGHTHOUSE_URL:-}"
          se="${SENTRY_URL:-}"
          [[ -z "$cov" ]] && cov="(未設定)"
          [[ -z "$lh" ]] && lh="(未設定)"
          [[ -z "$se" ]] && se="(未設定)"
          echo "cov=$cov" >> "$GITHUB_OUTPUT"
          echo "lh=$lh" >> "$GITHUB_OUTPUT"
          echo "se=$se" >> "$GITHUB_OUTPUT"
      - name: Write report links to summary
        env:
          COVERAGE_URL: ${{ steps.norm.outputs.cov }}
          LIGHTHOUSE_URL: ${{ steps.norm.outputs.lh }}
          SENTRY_URL: ${{ steps.norm.outputs.se }}
        run: |
          echo "## レポートリンク" | tee -a "$GITHUB_STEP_SUMMARY"
          echo "- カバレッジ: ${COVERAGE_URL}"   | tee -a "$GITHUB_STEP_SUMMARY"
          echo "- Lighthouse: ${LIGHTHOUSE_URL}" | tee -a "$GITHUB_STEP_SUMMARY"
          echo "- Sentry: ${SENTRY_URL}"         | tee -a "$GITHUB_STEP_SUMMARY"
      - name: Print normalized links to logs
        env:
          COVERAGE_URL: ${{ steps.norm.outputs.cov }}
          LIGHTHOUSE_URL: ${{ steps.norm.outputs.lh }}
          SENTRY_URL: ${{ steps.norm.outputs.se }}
        run: |
          echo "::group::Report links (bullets)"
          echo "- カバレッジ: ${COVERAGE_URL}"
          echo "- Lighthouse: ${LIGHTHOUSE_URL}"
          echo "- Sentry: ${SENTRY_URL}"
          echo "::endgroup::"
      - name: Upsert PR comment with links
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          COVERAGE_LINK: ${{ steps.norm.outputs.cov }}
          LIGHTHOUSE_LINK: ${{ steps.norm.outputs.lh }}
          SENTRY_LINK: ${{ steps.norm.outputs.se }}
        with:
          script: |
            const marker = '<!-- report-links-bot -->';
            const lines = [
              '## レポートリンク',
              `- カバレッジ: ${process.env.COVERAGE_LINK}`,
              `- Lighthouse: ${process.env.LIGHTHOUSE_LINK}`,
              `- Sentry: ${process.env.SENTRY_LINK}`,
              marker
            ];
            const body = lines.join('\n');
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            const prev = comments.find(comment => comment.body && comment.body.includes(marker));
            if (prev) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: prev.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
            }
