name: Quality Gates
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened, ready_for_review ]
  workflow_dispatch:
    inputs:
      ref:
        description: "Target ref (branch or tag)"
        required: false
        default: ""

concurrency:
  group: quality-gates-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.head_ref || github.ref }}
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install deps
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Typecheck
        run: npm run typecheck
      - name: Lint
        run: npm run lint
      - name: Test (coverage)
        run: npm run test:coverage -- --reporter=default
      - name: Playwright E2E
        run: npm run ci:e2e
        env:
          NOTIFY_WEBHOOK_URL: ${{ secrets.NOTIFY_WEBHOOK_URL }}
      - name: Perf report (LHCI + Web Vitals)
        run: npm run -s ci:perf-report
        env:
          NOTIFY_WEBHOOK_URL: ${{ secrets.NOTIFY_WEBHOOK_URL }}
      - name: Upload perf summary artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: perf-summary
          path: |
            reports/perf-summary.md
            reports/perf-summary.json
            lhci-results.json
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: lcov.info
          path: coverage/lcov.info
          if-no-files-found: error
      - name: Coverage summary
        if: always()
        run: |
          if [ -f coverage/coverage-summary.json ]; then
            pct=$(node -e "const s=require('./coverage/coverage-summary.json');console.log(s.total.lines.pct)")
            echo "### Coverage" >> $GITHUB_STEP_SUMMARY
            echo "**Lines:** ${pct}%  " >> $GITHUB_STEP_SUMMARY
          else
            echo "### Coverage" >> $GITHUB_STEP_SUMMARY
            echo "coverage summary not found" >> $GITHUB_STEP_SUMMARY
          fi

  canary:
    runs-on: ubuntu-latest
    needs: quality
    if: github.ref == 'refs/heads/main'
    env:
      VITE_FEATURE_SCHEDULES: 'true'
      NOTIFY_WEBHOOK_URL: ${{ secrets.NOTIFY_WEBHOOK_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Canary checks (E2E + LHCI + Summary)
        id: canary
        run: |
          set +e
          status=0

          npm run ci:e2e
          exit_code=$?
          if [ $exit_code -ne 0 ]; then
            status=$exit_code
          fi

          npm run ci:lh
          exit_code=$?
          if [ $exit_code -ne 0 ] && [ $status -eq 0 ]; then
            status=$exit_code
          fi

          npm run perf:summary
          exit_code=$?
          if [ $exit_code -ne 0 ] && [ $status -eq 0 ]; then
            status=$exit_code
          fi

          if [ $status -ne 0 ]; then
            exit $status
          fi
      - name: Notify canary failure
        if: failure()
        run: node scripts/notify.mjs --only-on-fail --title "canary(schedule)" --files reports/perf-summary.md
